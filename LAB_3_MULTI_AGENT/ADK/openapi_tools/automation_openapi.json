{
  "openapi": "3.0.0",
  "info": {
    "title": "Google Automation API",
    "description": "Gmail & Calendar & Sheets automation API for sending emails, creating calendar events with Google Meet integration, and placing orders",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://google-automation.1u1bpgsnsvuw.us-south.codeengine.appdomain.cloud",
      "description": "Production server"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "API Information",
        "description": "Get basic information about the Google Automation API",
        "operationId": "get_api_info",
        "responses": {
          "200": {
            "description": "API information and available endpoints",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Gmail & Calendar & Sheets FastAPI Service"
                    },
                    "version": {
                      "type": "string",
                      "example": "1.0.0"
                    },
                    "endpoints": {
                      "type": "object",
                      "properties": {
                        "send_gmail": {
                          "type": "string",
                          "example": "POST /send_gmail"
                        },
                        "create_calendar_event": {
                          "type": "string",
                          "example": "POST /create_calendar_event"
                        },
                        "place_order": {
                          "type": "string",
                          "example": "POST /place_order"
                        }
                      }
                    },
                    "docs": {
                      "type": "string",
                      "example": "/docs"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/send_gmail": {
      "post": {
        "summary": "send_email",
        "description": "Send email via Gmail with support for CC and BCC recipients",
        "operationId": "send_email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email sent successfully or simulation response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/create_calendar_event": {
      "post": {
        "summary": "create_calendar_event",
        "description": "Create Google Calendar event with Google Meet integration",
        "operationId": "create_calendar_event",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarEventRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Calendar event created successfully or error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarEventResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/place_order": {
      "post": {
        "summary": "place_order",
        "description": "Place an order and save it to Google Sheets with automatic customer assignment",
        "operationId": "place_order",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order placed successfully or error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceOrderResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Check the health status of the API service",
        "operationId": "health_check",
        "responses": {
          "200": {
            "description": "Service is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "healthy"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-07-30T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "EmailRequest": {
        "type": "object",
        "properties": {
          "to": {
            "type": "string",
            "format": "email",
            "description": "Recipient email address",
            "example": "recipient@example.com"
          },
          "subject": {
            "type": "string",
            "description": "Email subject",
            "example": "Meeting Invitation"
          },
          "body": {
            "type": "string",
            "description": "Email body content",
            "example": "Dear colleague, please join our meeting tomorrow at 2 PM."
          },
          "cc": {
            "type": "string",
            "description": "CC email addresses (comma-separated)",
            "example": "manager@example.com, team@example.com",
            "nullable": true
          },
          "bcc": {
            "type": "string",
            "description": "BCC email addresses (comma-separated)",
            "example": "admin@example.com",
            "nullable": true
          }
        },
        "required": ["to", "subject", "body"]
      },
      "EmailResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success", "simulation"],
            "description": "Response status",
            "example": "success"
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Email sent successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "message_id": {
                "type": "string",
                "description": "Gmail message ID (only for successful sends)",
                "example": "abc123def456"
              },
              "to": {
                "type": "string",
                "example": "recipient@example.com"
              },
              "subject": {
                "type": "string",
                "example": "Meeting Invitation"
              },
              "cc": {
                "type": "string",
                "example": "manager@example.com"
              },
              "bcc": {
                "type": "string",
                "example": "admin@example.com"
              },
              "body": {
                "type": "string",
                "description": "Email body (only in simulation mode)"
              },
              "error": {
                "type": "string",
                "description": "Error details (only in simulation mode)"
              }
            }
          }
        },
        "required": ["status", "message", "data"]
      },
      "CalendarEventRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Event title",
            "example": "Team Meeting"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Event date in YYYY-MM-DD format",
            "example": "2025-08-01"
          },
          "time": {
            "type": "string",
            "description": "Event time (e.g., '18:00', '6pm', '6-8pm', '18:00-20:00')",
            "example": "2-4pm"
          },
          "attendees": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            },
            "description": "List of attendee email addresses",
            "example": ["colleague1@example.com", "colleague2@example.com"]
          }
        },
        "required": ["title", "date", "time", "attendees"]
      },
      "CalendarEventResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success", "error"],
            "description": "Response status",
            "example": "success"
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Calendar event created successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "Team Meeting"
              },
              "date": {
                "type": "string",
                "format": "date",
                "example": "2025-08-01"
              },
              "time": {
                "type": "string",
                "description": "Formatted time range",
                "example": "14:00-16:00"
              },
              "attendees": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": ["colleague1@example.com", "colleague2@example.com"]
              },
              "event_id": {
                "type": "string",
                "description": "Google Calendar event ID (only for successful creation)",
                "example": "abc123def456ghi789"
              },
              "event_link": {
                "type": "string",
                "format": "uri",
                "description": "Google Calendar event link (only for successful creation)",
                "example": "https://calendar.google.com/calendar/event?eid=..."
              },
              "meet_link": {
                "type": "string",
                "format": "uri",
                "description": "Google Meet link (only for successful creation)",
                "example": "https://meet.google.com/abc-defg-hij"
              },
              "timezone": {
                "type": "string",
                "description": "Event timezone",
                "example": "Asia/Bangkok"
              },
              "error": {
                "type": "string",
                "description": "Error details (only in error status)"
              },
              "simulation_link": {
                "type": "string",
                "format": "uri",
                "description": "Mock Google Meet link (only in error status)",
                "example": "https://meet.google.com/mock-link-1234"
              }
            }
          }
        },
        "required": ["status", "message", "data"]
      },
      "PlaceOrderRequest": {
        "type": "object",
        "properties": {
          "product_name": {
            "type": "string",
            "description": "Product name",
            "example": "laptop"
          },
          "quantity": {
            "type": "integer",
            "minimum": 1,
            "description": "Quantity ordered (must be greater than 0)",
            "example": 2
          }
        },
        "required": ["product_name", "quantity"]
      },
      "PlaceOrderResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success", "partial_success", "error"],
            "description": "Response status",
            "example": "success"
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Order placed successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "order_id": {
                "type": "string",
                "description": "Generated order ID with timestamp",
                "example": "ORD-20250807143022"
              },
              "customer_name": {
                "type": "string",
                "description": "Randomly assigned mock customer name",
                "example": "Jane Smith"
              },
              "product_name": {
                "type": "string",
                "description": "Product name from request",
                "example": "laptop"
              },
              "quantity": {
                "type": "integer",
                "description": "Quantity from request",
                "example": 2
              },
              "customer_email": {
                "type": "string",
                "format": "email",
                "description": "Mock customer email address",
                "example": "jane.smith@email.com"
              },
              "order_date": {
                "type": "string",
                "format": "date-time",
                "description": "Order placement timestamp",
                "example": "2025-08-07 14:30:22"
              },
              "sheets_status": {
                "type": "string",
                "enum": ["success", "error"],
                "description": "Google Sheets save status",
                "example": "success"
              },
              "sheets_error": {
                "type": "string",
                "description": "Google Sheets error details (only if sheets_status is error)",
                "nullable": true,
                "example": null
              },
              "error": {
                "type": "string",
                "description": "General error details (only in error status)"
              }
            }
          }
        },
        "required": ["status", "message", "data"]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "description": "Error message describing the issue",
            "example": "Failed to send email: Authentication failed"
          }
        },
        "required": ["detail"]
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "loc": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {"type": "string"},
                      {"type": "integer"}
                    ]
                  },
                  "description": "Location of the error"
                },
                "msg": {
                  "type": "string",
                  "description": "Error message"
                },
                "type": {
                  "type": "string",
                  "description": "Error type"
                }
              }
            }
          }
        }
      }
    }
  }
}